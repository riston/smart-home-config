group:
  lights:
    name: All lights
    entities:
      - light.sonoff
      - light.bedroom_light
      - light.light_1
      - light.light_2
      - light.light_3
      - light.sonoff_second_floor_light
      - light.sonoff_stairs_light
      - light.all_rgbw2_lights
      - switch.garage_light

light:
  - platform: mqtt
    schema: template
    name: "RGBW2 Channel 1"
    command_topic: "shellies/shellyrgbw2-25ED03/white/0/set"
    state_topic: "shellies/shellyrgbw2-25ED03/white/0/status"
    command_on_template: >
      {"turn": "on"
      {%- if brightness is defined -%}
      , "brightness": {{brightness | float | multiply(0.3922) | round(0)}}
      {%- endif -%}
      {%- if red is defined and green is defined and blue is defined -%}
      , "red": {{ red }}, "green": {{ green }}, "blue": {{ blue }}
      {%- endif -%}
      {%- if white_value is defined -%}
      , "white": {{ white_value }}
      {%- endif -%}
      {%- if effect is defined -%}
      , "effect": {{ effect }}
      {%- endif -%}
      }
    command_off_template: '{"turn":"off"}'
    state_template: "{% if value_json.ison %}on{% else %}off{% endif %}"
    brightness_template: "{{ value_json.brightness | float | multiply(2.55) | round(0) }}"
    qos: 2
  - platform: mqtt
    schema: template
    name: "RGBW2 Channel 2"
    command_topic: "shellies/shellyrgbw2-25ED03/white/1/set"
    state_topic: "shellies/shellyrgbw2-25ED03/white/1/status"
    command_on_template: >
      {"turn": "on"
      {%- if brightness is defined -%}
      , "brightness": {{brightness | float | multiply(0.3922) | round(0)}}
      {%- endif -%}
      {%- if red is defined and green is defined and blue is defined -%}
      , "red": {{ red }}, "green": {{ green }}, "blue": {{ blue }}
      {%- endif -%}
      {%- if white_value is defined -%}
      , "white": {{ white_value }}
      {%- endif -%}
      {%- if effect is defined -%}
      , "effect": {{ effect }}
      {%- endif -%}
      }
    command_off_template: '{"turn":"off"}'
    state_template: "{% if value_json.ison %}on{% else %}off{% endif %}"
    brightness_template: "{{ value_json.brightness | float | multiply(2.55) | round(0) }}"
    qos: 2

  - platform: group
    name: "All RGBW2 Lights"
    entities:
      - light.RGBW2_Channel_2
      - light.RGBW2_Channel_1

sensor:
  - platform: template
    sensors:
      lights_turned_on_for_two_hours:
        icon_template: mdi:thumb-up
        value_template: >
          {% set now_time = now() %}
          {% set lights_on = expand('group.lights') | selectattr('state', 'eq', 'on') %}
          {% set count = namespace(value=0) %}
          {% for light in lights_on if as_timestamp(now_time) - as_timestamp(light.last_changed) > (2 * 60 * 60) -%}
            {% set count.value = count.value + 1 %}
          {%- endfor %}
          {{ count.value }}
        attribute_templates:
          light_entities: >
            {% set now_time = now() %}
            {% set lights_on = expand('group.lights') | selectattr('state', 'eq', 'on') %}
            {% for light in lights_on if as_timestamp(now_time) - as_timestamp(light.last_changed) > (2 * 60 * 60) -%}
              {{ light.entity_id }}{%- if loop.last %} {% else %}, {% endif -%}
            {%- endfor %}

automation:
  - id: sensor_lights_turned_on_four_two_hours_update
    alias: "Update the lights turned on"
    trigger:
      - platform: time_pattern
        minutes: '/5'
    action:
      - service: homeassistant.update_entity
        data:
          entity_id: sensor.lights_turned_on_for_two_hours

  - id: turn_lights_off_update
    alias: "Turn off lights"
    trigger:
      - platform: state
        entity_id: sensor.lights_turned_on_for_two_hours
    action:
      - service: light.turn_off
        data_template:
          entity_id: >
            {{ state_attr('sensor.lights_turned_on_for_two_hours', 'light_entities') }}

  - id: remote_trigger_pavilion_lights_on
    alias: 'Turn on pavilion lights'
    trigger:
      platform: sun
      event: sunset
    action:
      service: light.turn_on
      entity_id: light.pavilion

  - id: remote_trigger_pavilion_lights_off
    alias: 'Turn pavilion lights off'
    trigger:
      platform: time
      at: "23:30:00"
    action:
      service: light.turn_off
      entity_id: light.pavilion